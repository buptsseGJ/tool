package cn.edu.thu.platform.parser;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import cn.edu.thu.platform.entity.Race;
import cn.edu.thu.platform.entity.Report;
import cn.edu.thu.platform.entity.Reports;

public class DomToEntity {

	public void startDom(Node node) {
		if (node == null) {
			return;
		}
		Element root = ((Document) node).getDocumentElement();
		loopDom(root);
	}

	public void loopDom(Node node) {
		if (node.hasChildNodes()) {
			// get all the report
			NodeList reportList = node.getChildNodes();
			for (int i = 0; i < reportList.getLength(); i++) {
				// get all the race for each report
				NodeList raceList = reportList.item(i).getChildNodes();
				Set<Race> races = new HashSet<Race>(); 
				for (int j = 0; j < raceList.getLength(); j++) {
					// deal with each race
					if (raceList.item(j).hasChildNodes()) {
						Node tempLine1 = raceList.item(j).getFirstChild();
						Node tempLine2 = tempLine1.getNextSibling();
						Node tempVariable = tempLine2.getNextSibling();
						Node tempPackageClass = tempVariable.getNextSibling();
						Node tempDetail = tempPackageClass.getNextSibling();
						Race tempRace = new Race(Integer.parseInt(tempLine1
								.toString()), Integer.parseInt(tempLine2
								.toString()), tempVariable.toString(),
								tempPackageClass.toString(),
								tempDetail.toString());
						races.add(tempRace);
					}
				}
				NamedNodeMap reportAttributes = reportList.item(i).getAttributes();
				String programName = reportAttributes.getNamedItem("name").toString();
				Report report = new Report(races,programName);	
				Reports.reports.add(report);
			}
		}
	}
}
